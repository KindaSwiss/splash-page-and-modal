/**
 *  This has the same purpose as `pass` does in python.
 *  It's so I can delcare a selector and not have any properties
 */
/**
 * Disallow text selection
 */
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/**
 * file: _base.sass
 *
 */
* {
  box-sizing: border-box; }

body {
  background-image: url("../images/bg.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center;
  font-family: Roboto; }

h1, h2, h3, h4, h5, h6 {
  margin-bottom: 1rem; }

input[type="email"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="url"], input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="month"], input[type="time"], input[type="week"] {
  background: white;
  border: 0;
  font-family: 'Roboto Condensed';
  letter-spacing: 1px;
  width: 100%;
  position: relative;
  padding: 8px 16px; }

input,
button,
input::moz-focus-inner,
button::moz-focus-inner {
  margin: 0;
  border: 0;
  padding: 0; }

/**
 * file: _layouts.sass
 *
 */
/**
 * General styles
 */
.is-hidden, [v-cloak] {
  display: none !important; }

.float-right {
  float: right; }

.float-left {
  float: left; }

/**
 * Styles for the hero
 *
 * 1.
 *
 */
.hero {
  margin-left: 40%;
  position: absolute;
  top: 31%; }

.hero__title {
  color: #f2e30c;
  display: inline-block;
  font-size: 100px;
  font-weight: 900;
  text-transform: uppercase;
  margin: 0; }
  .hero__title span {
    background: black;
    display: inline-block;
    margin-bottom: 10px;
    padding: 4px 20px; }

/**
 * The following media queries make sure that the
 * hero heading stays inside the body. It is also
 * for Making sure the hero_cta button
 */
@media screen and (max-width: 1000px) {
  .hero {
    margin-left: 27%; }
  .hero__title {
    font-size: 80px; } }

@media screen and (max-width: 700px) {
  .hero__title {
    font-size: 60px; } }

@media screen and (max-width: 500px) {
  .hero {
    margin-left: 16px; }
  .hero__title {
    font-size: 52px; } }

@media screen and (max-width: 335px) {
  .hero__title {
    font-size: 40px; } }

/**
 * file: _button.sass
 *
 * Contains styles for buttons
 *
 */
/*
 * Base style for a button
 *
 * 1. How far to push :after outside it's container. The
 * purpose of this is to have a few pixels of transparency
 * before the box shadow.
 */
.btn {
  background: #f2e30c;
  border: 0;
  color: #262626;
  cursor: pointer;
  display: inline-block;
  font-family: Roboto Condensed;
  font-size: 1em;
  letter-spacing: 1px;
  text-decoration: none;
  text-transform: uppercase;
  vertical-align: middle;
  padding: 8px 12px;
  position: relative;
  transition: box-shadow 0.4s; }
  .btn:link, .btn:visited {
    color: #262626; }
  .btn:focus {
    outline: 0; }
  .btn:focus:after {
    box-shadow: 0 0 0 2px #f2e30c; }
  .btn:after {
    content: ' ';
    position: absolute;
    top: -2px;
    right: -2px;
    bottom: -2px;
    left: -2px;
    transition: box-shadow 0.4s; }
  .btn:hover:after {
    z-index: 2;
    box-shadow: 0 0 0 2px #f2e30c; }

.btn--heavy {
  font-weight: 700; }

/**
 * 1. Offset the top to make it inline with text
 */
.btn__icon {
  font-size: 1.25em;
  display: inline-block;
  font-weight: bold;
  position: relative;
  top: 2px;
  /* [1] */ }

/**
 * Push the icon just a tiny bit when on the right of the
 * btn's text
 */
.btn__icon--right {
  margin-left: 4px; }

/**
 * 1. The inner icon's left position after hover
 *
 * 2. The z-index is declared because if the mouse is left
 * on it when the modal is shown, the cursor will still
 * be pointer. Putting the z-index lower than the modal
 * fixes it.
 *
 * 3. Must set the property on the element and on focus
 * or else the transition won't work.
 *
 */
.btn--cta {
  font-size: 18px;
  z-index: 1;
  position: relative; }
  .btn--cta i {
    position: relative;
    left: 0px;
    transition: left 0.4s; }
  .btn--cta:hover i {
    left: 6px; }
  .btn--cta:focus i {
    left: 6px; }

/**
 * Make the buttons smaller on smaller screen sizes.
 */
@media screen and (max-width: 700px) {
  .btn--cta {
    font-size: 16px; } }

@media screen and (max-width: 335px) {
  .btn--cta {
    font-size: 13px; } }

/**
 * file: _modal.sass
 *
 */
/**
 * `.modal-overlay` sets up the overlay transitions as well
 * as the modal transitions
 * When aria-hidden is `false`, the overlay is
 * transitioned from opacity 0 to 1, and the modal
 * is slide/flipped down. The opposite happens when aria-hidden
 * is set to `true`.
 *
 * 1. There is a fallback to pointer events in the javascript
 * file. The fallback is just to set the overlay to display none.
 * In IE 9, where pointer-events aren't supported, but transitions
 * are supported, the modal will fade-in/slide/flip, but will not
 * transition back out.
 *
 *
 */
.modal-overlay {
  background-color: rgba(242, 227, 12, 0.9);
  -webkit-perspective: 1000px;
          perspective: 1000px;
  z-index: 5000;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transition: opacity 0.7s; }
  .modal-overlay[aria-hidden='false'] {
    opacity: 1; }
    .modal-overlay[aria-hidden='false'] .modal {
      top: 150px;
      -webkit-transform: rotateX(0deg);
      -ms-transform: rotateX(0deg);
      transform: rotateX(0deg);
      -webkit-transform-style: preserve-3d;
              transform-style: preserve-3d;
      -webkit-transform-origin: center;
          -ms-transform-origin: center;
              transform-origin: center; }
  .modal-overlay[aria-hidden='true'] {
    opacity: 0;
    pointer-events: none; }
    .modal-overlay[aria-hidden='true'] .modal {
      -webkit-transform: rotateX(-50deg);
      -ms-transform: rotateX(-50deg);
      transform: rotateX(-50deg); }

.modal {
  z-index: 5001;
  outline: 0;
  max-width: 35em;
  margin-left: auto;
  margin-right: auto;
  padding-right: 16px;
  padding-left: 16px;
  position: relative;
  top: 0px;
  transition: top 0.7s, -webkit-transform 0.7s;
  transition: top 0.7s, transform 0.7s; }
  .modal:after {
    content: " ";
    display: block;
    clear: both; }

/**
 * The wrapper is where the white background starts
 */
.modal__wrapper {
  background-color: white;
  box-shadow: 0px 12px 16px rgba(0, 0, 0, 0.3);
  position: relative; }

/**
 *
 * 1. This calculates the close button to be above the modal,
 * plus little more for extra space.
 *
 * 2. This calculates the close button to be passed the right
 * edge of the modal, plus a litter more for extra space.
 *
 */
.modal__close {
  background: transparent;
  border: 0;
  outline: 0;
  cursor: pointer;
  font-size: 1.5rem;
  position: absolute;
  top: -1.8rem;
  right: -1.8rem;
  transition: right 0.5s, box-shadow 0.3s; }
  .modal__close:focus {
    box-shadow: 0 0 0 3px black; }

/**
 * 1. This is so the background image can show,
 * if one is defined.
 */
.modal__content {
  height: 100%;
  padding: 30px; }
  .modal__content .modal__header {
    font-weight: 600;
    font-size: 1.3rem;
    margin-bottom: 30px; }
  .modal__content .modal__description {
    color: #666666;
    font-weight: 300;
    font-size: .95rem;
    margin-bottom: 30px; }

/**
 * 1. The clearfix is added because the button is floated right
 *
 */
.modal__form {
  background-color: black;
  padding: 20px; }
  .modal__form:after {
    content: "";
    display: table;
    clear: both; }
  .modal__form input, .modal__form button {
    display: inline-block;
    padding: 12px 30px; }
  .modal__form input {
    max-width: 72.5%;
    display: inline-block;
    transition: box-shadow 0.17s ease-in; }
    .modal__form input:focus {
      box-shadow: 0 0 0 2px black, 0 0 0 4px #f2e30c;
      outline: 0; }

/**
 * Customize the modal's background here
 */
#modal-subscribe .modal__container {
  background-image: url("../images/presentation.png");
  background-position: 140% 60%;
  background-size: 57%;
  background-repeat: no-repeat; }
  #modal-subscribe .modal__container .modal__header {
    max-width: 45%; }
  #modal-subscribe .modal__container .modal__description {
    max-width: 60%; }

/**
 * Move the close button to the top of the modal
 */
@media screen and (max-width: 650px) {
  .modal__close {
    top: -2rem;
    right: 0px; } }

@media screen and (max-width: 650px) {
  /**
	 * Put the input and button on separate lines
	 * The input should go full width of the form
	 * but the button should be the same size
	 */
  .modal__form {
    max-width: 100%; }
    .modal__form input {
      max-width: 100%;
      display: block; }
    .modal__form button {
      margin-top: 20px; } }

/**
 * Now make the submit button full width
 */
@media screen and (max-width: 400px) {
  .modal__form button {
    float: none;
    width: 100%; } }

/**
 * Make the header and description full width and
 * remove the background image.
 */
@media screen and (max-width: 571px) {
  .modal__content .modal__description,
  .modal__content .modal__header {
    max-width: 100%; }
  .modal__container {
    background-image: none; } }

@media screen and (orientation: portrait) and (max-width: 400px), screen and (orientation: landscape) and (max-width: 600px) {
  .modal {
    top: 50px !important; } }
